defmodule AppAsh.Repo.Migrations.InitialMigration do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:users, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :email, :citext, null: false
      add :is_active, :boolean, null: false, default: false
      add :master_public_key, :text, null: false
      add :master_password_hash, :text, null: false
      add :display_name, :text, null: false
      add :username, :text, null: false
    end

    create unique_index(:users, [:email], name: "users_unique_email_index")

    create table(:client_keys, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v4()"), primary_key: true
      add :type, :text, null: false
      add :encryption_iv, :text, null: false
      add :encrypted_private_key, :text, null: false

      add :user_id,
          references(:users,
            column: :id,
            name: "client_keys_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:client_keys, "client_keys_user_id_fkey")

    drop table(:client_keys)

    drop_if_exists unique_index(:users, [:email], name: "users_unique_email_index")

    drop table(:users)
  end
end
